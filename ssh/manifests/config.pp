# @summary A short summary of the purpose of this class
#
# A description of what this class does
#
# @example
#   include ssh::config
class ssh::config {
  file { '$ssh::target_path':
    ensure  => file,
    content => epp('ssh/sshd_config.epp, {
      'protocol'                          => ssh::protocol,
      'port'                              => ssh::port,
      'address_family'                    => ssh::address_family,
      'listen_address_v4'                 => ssh::listen_address_v4,
      'listen_address_v6'                 => ssh::listen_address_v6,
      'host_key'                          => ssh::host_key,
      'host_key_1'                        => ssh::host_key_1,
      'rkey_limit'                        => ssh::rekey_limit,
      'syslog_facility'                   => ssh::syslog_facility,
      'log_level'                         => ssh::log_level,
      'login_grace_time'                  => ssh::login_grace_time,
      'permit_root_login'                 => ssh::permit_root_login,
      'strict_modes'                      => ssh::strict_modes,
      'max_auth_tries'                    => ssh::max_auth_tries,
      'max_sessions'                      => ssh::max_sessions,
      'pubkey_authentication'             => ssh::pubkey_authentication,
      'authorized_keys_file'              => ssh::authorized_keys_file,
      'authorized_principals_file'        => ssh::authorized_principals_file,
      'authorized_keys_command'           => ssh::authorized_keys_command,
      'authorized_keys_command_user'      => ssh::authorized_keys_command_user,
      'hostbased_authentication'          => ssh::hostbased_authentication,
      'ignore_user_known_hosts'           => ssh::ignore_user_known_hosts,
      'ignore_rhosts'                     => ssh::ignore_rhosts,
      'permit_empty_passwords'            => ssh::permit_empty_passwords,
      'password_authentication'           => ssh::password_authentication,
      'challenge_response_authentication' => ssh::challenge_response_authentication,
      'kerberos_authentication'           => ssh::kerberos_authentication,
      'kerberos_or_local_passwd'          => ssh::kerberos_or_local_passwd,
      'kerberos_ticket_cleanup'           => ssh::kerberos_ticket_cleanup,
      'kerberos_get_afs_token'            => ssh::kerberos_get_afs_token,
      'kerberos_sse_kuserok'              => ssh::kerberos_sse_kuserok,
      'gssapi_authentication'             => ssh::gssapi_authentication,
      'gssapi_cleanup_credentials'        => ssh::gssapi_cleanup_credentials,
      'gssapi_strict_acceptor_check'      => ssh::gssapi_strict_acceptor_check,
      'gssapi_key_exchange'               => ssh::gssapi_key_exchange,
      'gssapi_enablek5users'              => ssh::gssapi_enablek5users,
      'use_pam'                           => ssh::use_pam,
      'allow_agent_forwarding'            => ssh::allow_agent_forwarding,
      'allow_tcp_forwarding'              => ssh::allow_tcp_forwarding,
      'gateway_ports'                     => ssh::gateway_ports,
      'x11_forwarding'                    => ssh::x11_forwarding,
      'x11_display_offset'                => ssh::x11_display_offset,
      'x11_use_localhost'                 => ssh::x11_use_localhost,
      'permit_tty'                        => ssh::permit_tty,
      'print_motd'                        => ssh::print_motd,
      'print_last_log'                    => ssh::print_last_log,
      'tcp_keep_alive'                    => ssh::tcp_keep_alive,
      'permit_user_environment'           => ssh::permit_user_environment,
      'compression'                       => ssh::compression,
      'client_alive_interval'             => ssh::client_alive_interval,
      'client_alive_count_max'            => ssh::client_alive_count_max,
      'use_dns'                           => ssh::use_dns,
      'pid_file'                          => ssh::pid_file,
      'max_startups'                      => ssh::max_startups,
      'permit_tunnel'                     => ssh::permit_tunnel,
      'chroot_directory'                  => ssh::chroot_directory,
      'version_addendum'                  => ssh::version_addendum,
      'banner'                            => ssh::banner,
      'accept_env_1'                      => ssh::accept_env_1,
      'accept_env_2'                      => ssh::accept_env_2,
      'accept_env_3'                      => ssh::accept_env_3,
      'accept_env_4'                      => ssh::accept_env_4,
      'subsystem'                         => ssh::subsystem,
    }),
    owner   => 'root',
    group   => 'root',
    mode    => '0755',
    -> Service[$ssh::service_name],
  }
}
